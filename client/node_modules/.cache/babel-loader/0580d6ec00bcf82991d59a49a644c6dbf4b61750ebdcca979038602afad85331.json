{"ast":null,"code":"var _jsxFileName = \"/Users/me-mac/development/nodejs/Social Media/client/src/components/post/Post.jsx\",\n  _s = $RefreshSig$();\nimport \"./post.scss\";\nimport FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\nimport FavoriteOutlinedIcon from \"@mui/icons-material/FavoriteOutlined\";\nimport TextsmsOutlinedIcon from \"@mui/icons-material/TextsmsOutlined\";\nimport ShareOutlinedIcon from \"@mui/icons-material/ShareOutlined\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { Link } from \"react-router-dom\";\nimport Comments from \"../comments/Comments\";\nimport { useContext, useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  post\n}) => {\n  _s();\n  const [commentOpen, setCommentOpen] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const queryClient = useQueryClient();\n  const commentsData = Comments(post.id);\n  console.log(commentsData);\n\n  // const { isLoading, error, data } = useQuery({\n  //   queryKey: [\"likes\", post.id], //wizout it it will be static and fixed query for only one post, but we need likes for all posts and this makes it dynamic\n  //   queryFn: () => makeRequest.get(\"/likes?postId=\" + post.id).then((res) => {\n  //     return res.data;\n  //   })\n  // }\n  // );\n\n  // const mutation = useMutation({\n  //   mutationFn: (liked) => {\n  //     if (liked) return makeRequest.delete('/likes?postId=' + post.id)\n  //     return makeRequest.post('/likes', { postId: post.id })\n  //   },\n  //   onSuccess: () => {\n  //     // Invalidate and refetch(refresh)\n  //     queryClient.invalidateQueries({ queryKey: [\"likes\"] })\n  //   },\n  // });\n\n  // const handleClick = async (e, res) => {\n  //   e.preventDefault()\n\n  //   try {\n  //     mutation.mutate(data.includes(currentUser.id))\n\n  //   } catch (error) {\n  //     res.status(500).json(\"Error in Fetching the likes : \" + error)\n  //   }\n  // }\n  ///////////////////////////////////////\n  const {\n    e,\n    r,\n    data\n  } = useQuery({\n    queryKey: [\"comments\", post.id],\n    queryFn: () => makeRequest.get(\"/comments?postId=\" + post.id).then(res => {\n      return res.data;\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dl\",\n      children: dataC && dataC.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./upload/\" + post.profilePic,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${post.userId}`,\n              style: {\n                textDecoration: \"none\",\n                color: \"inherit\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: post.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: moment(post.createdAt).fromNow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreHorizIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./upload/\" + post.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [isLoading ? \"\" : data && data.includes(currentUser.id) ? /*#__PURE__*/_jsxDEV(FavoriteOutlinedIcon, {\n            style: {\n              color: \"red\"\n            },\n            onClick: handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorderOutlinedIcon, {\n            onClick: handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), data && data.length, \" Likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          onClick: () => setCommentOpen(!commentOpen),\n          children: [/*#__PURE__*/_jsxDEV(TextsmsOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), 12, \" Comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(ShareOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), \"Share\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), commentOpen && /*#__PURE__*/_jsxDEV(Comments, {\n        postId: post.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"7OtEWTCFSzyTOSYYv2qXBzthdV0=\", false, function () {\n  return [useQueryClient, useQuery];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["FavoriteBorderOutlinedIcon","FavoriteOutlinedIcon","TextsmsOutlinedIcon","ShareOutlinedIcon","MoreHorizIcon","Link","Comments","useContext","useState","useQuery","useMutation","useQueryClient","makeRequest","moment","AuthContext","jsxDEV","_jsxDEV","Post","post","_s","commentOpen","setCommentOpen","currentUser","queryClient","commentsData","id","console","log","e","r","data","queryKey","queryFn","get","then","res","className","children","dataC","length","fileName","_jsxFileName","lineNumber","columnNumber","src","profilePic","alt","to","userId","style","textDecoration","color","name","createdAt","fromNow","desc","image","isLoading","includes","onClick","handleClick","postId","_c","$RefreshReg$"],"sources":["/Users/me-mac/development/nodejs/Social Media/client/src/components/post/Post.jsx"],"sourcesContent":["import \"./post.scss\";\nimport FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\nimport FavoriteOutlinedIcon from \"@mui/icons-material/FavoriteOutlined\";\nimport TextsmsOutlinedIcon from \"@mui/icons-material/TextsmsOutlined\";\nimport ShareOutlinedIcon from \"@mui/icons-material/ShareOutlined\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { Link } from \"react-router-dom\";\nimport Comments from \"../comments/Comments\";\nimport { useContext, useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport { AuthContext } from \"../../context/authContext\";\n\nconst Post = ({ post }) => {\n  const [commentOpen, setCommentOpen] = useState(false);\n  const { currentUser } = useContext(AuthContext)\n  const queryClient = useQueryClient();\n  const commentsData = Comments(post.id)\n  console.log(commentsData)\n\n  // const { isLoading, error, data } = useQuery({\n  //   queryKey: [\"likes\", post.id], //wizout it it will be static and fixed query for only one post, but we need likes for all posts and this makes it dynamic\n  //   queryFn: () => makeRequest.get(\"/likes?postId=\" + post.id).then((res) => {\n  //     return res.data;\n  //   })\n  // }\n  // );\n\n  // const mutation = useMutation({\n  //   mutationFn: (liked) => {\n  //     if (liked) return makeRequest.delete('/likes?postId=' + post.id)\n  //     return makeRequest.post('/likes', { postId: post.id })\n  //   },\n  //   onSuccess: () => {\n  //     // Invalidate and refetch(refresh)\n  //     queryClient.invalidateQueries({ queryKey: [\"likes\"] })\n  //   },\n  // });\n\n  // const handleClick = async (e, res) => {\n  //   e.preventDefault()\n\n  //   try {\n  //     mutation.mutate(data.includes(currentUser.id))\n\n  //   } catch (error) {\n  //     res.status(500).json(\"Error in Fetching the likes : \" + error)\n  //   }\n  // }\n  ///////////////////////////////////////\n  const { e, r, data } = useQuery({\n    queryKey: [\"comments\", post.id],\n    queryFn: () => makeRequest.get(\"/comments?postId=\" + post.id).then((res) => {\n      return res.data;\n    })\n  }\n  );\n\n  return (\n    <div className=\"post\">\n      <div id=\"dl\">\n        {dataC && dataC.length}\n      </div>\n      <div className=\"container\">\n        <div className=\"user\">\n          <div className=\"userInfo\">\n            <img src={\"./upload/\" + post.profilePic} alt=\"\" />\n            <div className=\"details\">\n              <Link\n                to={`/profile/${post.userId}`}\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n              >\n                <span className=\"name\">{post.name}</span>\n              </Link>\n              <span className=\"date\">{moment(post.createdAt).fromNow()}</span>\n            </div>\n          </div>\n          <MoreHorizIcon />\n        </div>\n        <div className=\"content\">\n          <p>{post.desc}</p>\n          <img src={\"./upload/\" + post.image} alt=\"\" />\n        </div>\n        <div className=\"info\">\n          <div className=\"item\">\n            {isLoading ? \"\" :\n              data && data.includes(currentUser.id) ?\n                <FavoriteOutlinedIcon style={{ color: \"red\" }} onClick={handleClick} /> :\n                <FavoriteBorderOutlinedIcon onClick={handleClick} />}\n            {data && data.length} Likes\n          </div>\n          <div className=\"item\" onClick={() => setCommentOpen(!commentOpen)}>\n            <TextsmsOutlinedIcon />\n            {12} Comments\n          </div>\n          <div className=\"item\">\n            <ShareOutlinedIcon />\n            Share\n          </div>\n        </div>\n        {commentOpen && <Comments postId={post.id} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAOA,0BAA0B,MAAM,4CAA4C;AACnF,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,aAAa,MAAM,+BAA+B;AACzD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,QAAQ,EAAEC,WAAW,EAAEC,cAAc,QAAQ,uBAAuB;AAC7E,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM;IAAEc;EAAY,CAAC,GAAGf,UAAU,CAACO,WAAW,CAAC;EAC/C,MAAMS,WAAW,GAAGZ,cAAc,CAAC,CAAC;EACpC,MAAMa,YAAY,GAAGlB,QAAQ,CAACY,IAAI,CAACO,EAAE,CAAC;EACtCC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;;EAEzB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA,MAAM;IAAEI,CAAC;IAAEC,CAAC;IAAEC;EAAK,CAAC,GAAGrB,QAAQ,CAAC;IAC9BsB,QAAQ,EAAE,CAAC,UAAU,EAAEb,IAAI,CAACO,EAAE,CAAC;IAC/BO,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAACqB,GAAG,CAAC,mBAAmB,GAAGf,IAAI,CAACO,EAAE,CAAC,CAACS,IAAI,CAAEC,GAAG,IAAK;MAC1E,OAAOA,GAAG,CAACL,IAAI;IACjB,CAAC;EACH,CACA,CAAC;EAED,oBACEd,OAAA;IAAKoB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBrB,OAAA;MAAKS,EAAE,EAAC,IAAI;MAAAY,QAAA,EACTC,KAAK,IAAIA,KAAK,CAACC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACN3B,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBrB,OAAA;QAAKoB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBrB,OAAA;UAAKoB,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBrB,OAAA;YAAK4B,GAAG,EAAE,WAAW,GAAG1B,IAAI,CAAC2B,UAAW;YAACC,GAAG,EAAC;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClD3B,OAAA;YAAKoB,SAAS,EAAC,SAAS;YAAAC,QAAA,gBACtBrB,OAAA,CAACX,IAAI;cACH0C,EAAE,EAAG,YAAW7B,IAAI,CAAC8B,MAAO,EAAE;cAC9BC,KAAK,EAAE;gBAAEC,cAAc,EAAE,MAAM;gBAAEC,KAAK,EAAE;cAAU,CAAE;cAAAd,QAAA,eAEpDrB,OAAA;gBAAMoB,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAEnB,IAAI,CAACkC;cAAI;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC,eACP3B,OAAA;cAAMoB,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAExB,MAAM,CAACK,IAAI,CAACmC,SAAS,CAAC,CAACC,OAAO,CAAC;YAAC;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACN3B,OAAA,CAACZ,aAAa;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACN3B,OAAA;QAAKoB,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBrB,OAAA;UAAAqB,QAAA,EAAInB,IAAI,CAACqC;QAAI;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClB3B,OAAA;UAAK4B,GAAG,EAAE,WAAW,GAAG1B,IAAI,CAACsC,KAAM;UAACV,GAAG,EAAC;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACN3B,OAAA;QAAKoB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBrB,OAAA;UAAKoB,SAAS,EAAC,MAAM;UAAAC,QAAA,GAClBoB,SAAS,GAAG,EAAE,GACb3B,IAAI,IAAIA,IAAI,CAAC4B,QAAQ,CAACpC,WAAW,CAACG,EAAE,CAAC,gBACnCT,OAAA,CAACf,oBAAoB;YAACgD,KAAK,EAAE;cAAEE,KAAK,EAAE;YAAM,CAAE;YAACQ,OAAO,EAAEC;UAAY;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBACvE3B,OAAA,CAAChB,0BAA0B;YAAC2D,OAAO,EAAEC;UAAY;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACvDb,IAAI,IAAIA,IAAI,CAACS,MAAM,EAAC,QACvB;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN3B,OAAA;UAAKoB,SAAS,EAAC,MAAM;UAACuB,OAAO,EAAEA,CAAA,KAAMtC,cAAc,CAAC,CAACD,WAAW,CAAE;UAAAiB,QAAA,gBAChErB,OAAA,CAACd,mBAAmB;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACtB,EAAE,EAAC,WACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN3B,OAAA;UAAKoB,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBrB,OAAA,CAACb,iBAAiB;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,SAEvB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACLvB,WAAW,iBAAIJ,OAAA,CAACV,QAAQ;QAACuD,MAAM,EAAE3C,IAAI,CAACO;MAAG;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA3FIF,IAAI;EAAA,QAGYN,cAAc,EAkCXF,QAAQ;AAAA;AAAAqD,EAAA,GArC3B7C,IAAI;AA6FV,eAAeA,IAAI;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}