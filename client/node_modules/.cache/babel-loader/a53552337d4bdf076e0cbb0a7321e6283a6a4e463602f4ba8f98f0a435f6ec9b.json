{"ast":null,"code":"var _jsxFileName = \"/Users/me-mac/development/nodejs/Social Media/client/src/components/comments/Comments.jsx\",\n  _s = $RefreshSig$();\nimport \"./comments.scss\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = postId => {\n  _s();\n  const queryClient = useQueryClient();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [desc, setDesc] = useState(\"\");\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery({\n    queryKey: [\"comments\", postId['postId']],\n    queryFn: () => makeRequest.get(\"/comments?postId=\" + postId['postId']).then(res => {\n      console.log(data.length);\n      return res.data;\n    })\n  });\n\n  // const commentsLength = data.length\n\n  const mutation = useMutation({\n    mutationFn: newComment => {\n      return makeRequest.post('/comments', newComment);\n    },\n    onSuccess: () => {\n      // Invalidate and refetch(refresh)\n      queryClient.invalidateQueries({\n        queryKey: ['comments']\n      });\n    }\n  });\n  const handleClick = async (e, res) => {\n    e.preventDefault();\n    try {\n      mutation.mutate({\n        desc,\n        postId: postId['postId']\n      });\n      setDesc(\"\");\n    } catch (error) {\n      res.status(500).json(\"Error in Fetching the comments : \" + error);\n    }\n  };\n  return {\n    commentsLength: 11,\n    jsx: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"write\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./upload/\" + currentUser.profilePic,\n          alt: \"comentPic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"write a comment\",\n          value: desc,\n          onChange: e => {\n            setDesc(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), error ? \"Something went wrong in loading comments!\" : isLoading ? \"Loading comments...\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./upload/\" + currentUser.profilePic,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: comment.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: moment(comment.createdAt).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  };\n};\n_s(Comments, \"UpEG0wUammDStP49GGY45dvOnB4=\", false, function () {\n  return [useQueryClient, useQuery, useMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["moment","useState","useContext","AuthContext","useMutation","useQuery","useQueryClient","makeRequest","jsxDEV","_jsxDEV","Comments","postId","_s","queryClient","currentUser","desc","setDesc","isLoading","error","data","queryKey","queryFn","get","then","res","console","log","length","mutation","mutationFn","newComment","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","status","json","commentsLength","jsx","className","children","src","profilePic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","map","comment","name","createdAt","fromNow","id","_c","$RefreshReg$"],"sources":["/Users/me-mac/development/nodejs/Social Media/client/src/components/comments/Comments.jsx"],"sourcesContent":["import \"./comments.scss\";\nimport moment from \"moment\"\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\n\nconst Comments = (postId) => {\n  const queryClient = useQueryClient();\n  const { currentUser } = useContext(AuthContext);\n  const [desc, setDesc] = useState(\"\")\n\n  const { isLoading, error, data } = useQuery({\n    queryKey: [\"comments\", postId['postId']],\n    queryFn: () => makeRequest.get(\"/comments?postId=\" + postId['postId']).then((res) => {\n      console.log(data.length)\n      return res.data;\n    })\n  }\n  );\n\n  // const commentsLength = data.length\n\n  const mutation = useMutation({\n    mutationFn: (newComment) => {\n      return makeRequest.post('/comments', newComment)\n    },\n    onSuccess: () => {\n      // Invalidate and refetch(refresh)\n      queryClient.invalidateQueries({ queryKey: ['comments'] })\n    },\n  });\n\n  const handleClick = async (e, res) => {\n    e.preventDefault()\n\n    try {\n      mutation.mutate({ desc, postId: postId['postId'] })\n      setDesc(\"\")\n\n    } catch (error) {\n      res.status(500).json(\"Error in Fetching the comments : \" + error)\n    }\n  }\n\n  return {\n    commentsLength: 11,\n    jsx: (\n      <div className=\"comments\">\n        <div className=\"write\">\n          <img src={\"./upload/\" + currentUser.profilePic} alt=\"comentPic\" />\n          <input type=\"text\" placeholder=\"write a comment\" value={desc} onChange={e => { setDesc(e.target.value) }}\n          />\n          <button onClick={handleClick}>Send</button>\n        </div>\n        {error ? \"Something went wrong in loading comments!\"\n          : (isLoading ? \"Loading comments...\" : data.map((comment) => (\n            <div className=\"comment\" key={comment.id}>\n              <img src={\"./upload/\" + currentUser.profilePic} alt=\"\" />\n              <div className=\"info\">\n                <span>{comment.name}</span>\n                <p>{comment.desc}</p>\n              </div>\n              <span className=\"date\">{moment(comment.createdAt).fromNow()}</span>\n            </div>\n          )))}\n      </div>\n    )\n  };\n}\n\nexport default Comments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}