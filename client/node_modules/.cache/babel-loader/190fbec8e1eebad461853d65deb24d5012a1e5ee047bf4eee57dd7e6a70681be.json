{"ast":null,"code":"var _s = $RefreshSig$();\nimport \"./comments.scss\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nconst Comments = postId => {\n  _s();\n  const queryClient = useQueryClient();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [desc, setDesc] = useState(\"\");\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery({\n    queryKey: [\"comments\", postId['postId']],\n    queryFn: () => makeRequest.get(\"/comments?postId=\" + postId['postId']).then(res => {\n      return res.data;\n    })\n  });\n  // console.log(data.length)\n\n  const mutation = useMutation({\n    mutationFn: newComment => {\n      return makeRequest.post('/comments', newComment);\n    },\n    onSuccess: () => {\n      // Invalidate and refetch(refresh)\n      queryClient.invalidateQueries({\n        queryKey: ['comments']\n      });\n    }\n  });\n  const handleClick = async (e, res) => {\n    e.preventDefault();\n    try {\n      mutation.mutate({\n        desc,\n        postId: postId['postId']\n      });\n      setDesc(\"\");\n    } catch (error) {\n      res.status(500).json(\"Error in Fetching the comments : \" + error);\n    }\n  };\n  return {};\n};\n_s(Comments, \"UpEG0wUammDStP49GGY45dvOnB4=\", false, function () {\n  return [useQueryClient, useQuery, useMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["moment","useState","useContext","AuthContext","useMutation","useQuery","useQueryClient","makeRequest","Comments","postId","_s","queryClient","currentUser","desc","setDesc","isLoading","error","data","queryKey","queryFn","get","then","res","mutation","mutationFn","newComment","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","status","json","_c","$RefreshReg$"],"sources":["/Users/me-mac/development/nodejs/Social Media/client/src/components/comments/Comments.jsx"],"sourcesContent":["import \"./comments.scss\";\nimport moment from \"moment\"\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\n\nconst Comments = (postId) => {\n  const queryClient = useQueryClient();\n  const { currentUser } = useContext(AuthContext);\n  const [desc, setDesc] = useState(\"\")\n\n  const { isLoading, error, data } = useQuery({\n    queryKey: [\"comments\", postId['postId']],\n    queryFn: () => makeRequest.get(\"/comments?postId=\" + postId['postId']).then((res) => {\n      return res.data;\n    })\n  }\n  );\n  // console.log(data.length)\n\n  const mutation = useMutation({\n    mutationFn: (newComment) => {\n      return makeRequest.post('/comments', newComment)\n    },\n    onSuccess: () => {\n      // Invalidate and refetch(refresh)\n      queryClient.invalidateQueries({ queryKey: ['comments'] })\n    },\n  });\n\n  const handleClick = async (e, res) => {\n    e.preventDefault()\n\n    try {\n      mutation.mutate({ desc, postId: postId['postId'] })\n      setDesc(\"\")\n\n    } catch (error) {\n      res.status(500).json(\"Error in Fetching the comments : \" + error)\n    }\n  }\n\n  return {\n    \n  }\n};\n\nexport default Comments;\n"],"mappings":";AAAA,OAAO,iBAAiB;AACxB,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,WAAW,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,uBAAuB;AAC7E,SAASC,WAAW,QAAQ,aAAa;AAEzC,MAAMC,QAAQ,GAAIC,MAAM,IAAK;EAAAC,EAAA;EAC3B,MAAMC,WAAW,GAAGL,cAAc,CAAC,CAAC;EACpC,MAAM;IAAEM;EAAY,CAAC,GAAGV,UAAU,CAACC,WAAW,CAAC;EAC/C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAM;IAAEc,SAAS;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGZ,QAAQ,CAAC;IAC1Ca,QAAQ,EAAE,CAAC,UAAU,EAAET,MAAM,CAAC,QAAQ,CAAC,CAAC;IACxCU,OAAO,EAAEA,CAAA,KAAMZ,WAAW,CAACa,GAAG,CAAC,mBAAmB,GAAGX,MAAM,CAAC,QAAQ,CAAC,CAAC,CAACY,IAAI,CAAEC,GAAG,IAAK;MACnF,OAAOA,GAAG,CAACL,IAAI;IACjB,CAAC;EACH,CACA,CAAC;EACD;;EAEA,MAAMM,QAAQ,GAAGnB,WAAW,CAAC;IAC3BoB,UAAU,EAAGC,UAAU,IAAK;MAC1B,OAAOlB,WAAW,CAACmB,IAAI,CAAC,WAAW,EAAED,UAAU,CAAC;IAClD,CAAC;IACDE,SAAS,EAAEA,CAAA,KAAM;MACf;MACAhB,WAAW,CAACiB,iBAAiB,CAAC;QAAEV,QAAQ,EAAE,CAAC,UAAU;MAAE,CAAC,CAAC;IAC3D;EACF,CAAC,CAAC;EAEF,MAAMW,WAAW,GAAG,MAAAA,CAAOC,CAAC,EAAER,GAAG,KAAK;IACpCQ,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACFR,QAAQ,CAACS,MAAM,CAAC;QAAEnB,IAAI;QAAEJ,MAAM,EAAEA,MAAM,CAAC,QAAQ;MAAE,CAAC,CAAC;MACnDK,OAAO,CAAC,EAAE,CAAC;IAEb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdM,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,mCAAmC,GAAGlB,KAAK,CAAC;IACnE;EACF,CAAC;EAED,OAAO,CAEP,CAAC;AACH,CAAC;AAACN,EAAA,CAvCIF,QAAQ;EAAA,QACQF,cAAc,EAICD,QAAQ,EAS1BD,WAAW;AAAA;AAAA+B,EAAA,GAdxB3B,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}