{"ast":null,"code":"var _jsxFileName = \"/Users/me-mac/development/nodejs/Social Media/client/src/components/comments/Comments.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = postId => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery({\n    queryKey: [\"comments\"],\n    queryFn: () => makeRequest.get(\"/comments?postId=\", postId['postId']).then(res => {\n      console.log(\"/comments?postId=\", res.data);\n      return res.data;\n    })\n  });\n  console.log(data);\n  const mutation = useMutation({\n    mutationFn: newPost => {\n      return makeRequest.post('/posts', newPost);\n    },\n    onSuccess: () => {\n      // Invalidate and refetch(refresh)\n      queryClient.invalidateQueries({\n        queryKey: ['posts']\n      });\n    }\n  });\n  const handleClick = async (e, res) => {\n    e.preventDefault();\n    try {\n      let imgUrl = \"\";\n      if (file) imgUrl = await upload();\n      mutation.mutate({\n        desc: desc,\n        image: imgUrl\n      });\n      setDesc(\"\");\n      setFile(null);\n    } catch (error) {\n      res.status(500).json(\"Error in Fetching the uploaded data : \" + error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"write a comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error ? \"Something went wrong in loading comments!\" : isLoading ? \"Loading comments...\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: comment.profilePicture,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"fVt0Lk9QYnWmUo+WuHGHVQgy0x8=\", true, function () {\n  return [useQuery];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useContext","AuthContext","useQuery","makeRequest","moment","jsxDEV","_jsxDEV","Comments","postId","_s","currentUser","isLoading","error","data","queryKey","queryFn","get","then","res","console","log","mutation","useMutation","mutationFn","newPost","post","onSuccess","queryClient","invalidateQueries","handleClick","e","preventDefault","imgUrl","file","upload","mutate","desc","image","setDesc","setFile","status","json","className","children","src","profilePic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","map","comment","profilePicture","name","createdAt","fromNow","_c","$RefreshReg$"],"sources":["/Users/me-mac/development/nodejs/Social Media/client/src/components/comments/Comments.jsx"],"sourcesContent":["import { useContext } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\"\n\nconst Comments = (postId) => {\n  const { currentUser } = useContext(AuthContext);\n\n  const { isLoading, error, data } = useQuery({\n    queryKey: [\"comments\"],\n    queryFn: () => makeRequest.get(\"/comments?postId=\",postId['postId']).then((res) => {\n      console.log(\"/comments?postId=\", res.data)\n      return res.data;\n    })\n  }\n  );\n  console.log(data)\n\n  const mutation = useMutation({\n    mutationFn: (newPost) => {\n      return makeRequest.post('/posts', newPost)\n    },\n    onSuccess: () => {\n      // Invalidate and refetch(refresh)\n      queryClient.invalidateQueries({ queryKey: ['posts'] })\n    },\n  })\n\n  const handleClick = async (e, res) => {\n    e.preventDefault()\n\n    try {\n      let imgUrl = \"\"\n      if (file) imgUrl = await upload();\n      mutation.mutate({ desc: desc, image: imgUrl })\n\n      setDesc(\"\")\n      setFile(null)\n\n    } catch (error) {\n      res.status(500).json(\"Error in Fetching the uploaded data : \" + error)\n    }\n  }\n\n  return (\n    <div className=\"comments\">\n      <div className=\"write\">\n        <img src={currentUser.profilePic} alt=\"\" />\n        <input type=\"text\" placeholder=\"write a comment\" />\n        <button>Send</button>\n      </div>\n      {error ? \"Something went wrong in loading comments!\"\n        : (isLoading ? \"Loading comments...\" : data.map((comment) => (\n          <div className=\"comment\">\n            <img src={comment.profilePicture} alt=\"\" />\n            <div className=\"info\">\n              <span>{comment.name}</span>\n              <p>{comment.desc}</p>\n            </div>\n            <span className=\"date\">{moment(comment.createdAt).fromNow()}</span>\n          </div>\n        )))}\n    </div>\n  );\n};\n\nexport default Comments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}