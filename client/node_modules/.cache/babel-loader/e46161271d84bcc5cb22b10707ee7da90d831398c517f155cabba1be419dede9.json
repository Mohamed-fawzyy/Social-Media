{"ast":null,"code":"var _jsxFileName = \"/Users/me-mac/development/nodejs/Social Media/client/src/components/comments/Comments.jsx\",\n  _s = $RefreshSig$();\nimport \"./comments.scss\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = postId => {\n  _s();\n  const queryClient = useQueryClient();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [desc, setDesc] = useState(\"\");\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery({\n    queryKey: [\"comments\"],\n    queryFn: () => makeRequest.get(\"/comments?postId=\" + postId['postId']).then(res => {\n      console.log(\"my data:\", res.data);\n      return res.data;\n    })\n  });\n  const mutation = useMutation({\n    mutationFn: newComment => {\n      console.log(\"new Comment:\");\n      return makeRequest.post('/comments', newComment);\n    },\n    onSuccess: () => {\n      // Invalidate and refetch(refresh)\n      queryClient.invalidateQueries({\n        queryKey: ['comments']\n      });\n    }\n  });\n  const handleClick = async (e, res) => {\n    e.preventDefault();\n    try {\n      mutation.mutate({\n        desc,\n        postId\n      });\n      setDesc(\"\");\n    } catch (error) {\n      res.status(500).json(\"Error in Fetching the comments : \" + error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"write a comment\",\n        value: desc,\n        onChange: e => {\n          setDesc(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error ? \"Something went wrong in loading comments!\" : isLoading ? \"Loading comments...\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: comment.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"UpEG0wUammDStP49GGY45dvOnB4=\", false, function () {\n  return [useQueryClient, useQuery, useMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["moment","useState","useContext","AuthContext","useMutation","useQuery","useQueryClient","makeRequest","jsxDEV","_jsxDEV","Comments","postId","_s","queryClient","currentUser","desc","setDesc","isLoading","error","data","queryKey","queryFn","get","then","res","console","log","mutation","mutationFn","newComment","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","status","json","className","children","src","profilePic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","map","comment","name","createdAt","fromNow","id","_c","$RefreshReg$"],"sources":["/Users/me-mac/development/nodejs/Social Media/client/src/components/comments/Comments.jsx"],"sourcesContent":["import \"./comments.scss\";\nimport moment from \"moment\"\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\n\nconst Comments = (postId) => {\n  const queryClient = useQueryClient();\n  const { currentUser } = useContext(AuthContext);\n  const [desc, setDesc] = useState(\"\")\n\n  const { isLoading, error, data } = useQuery({\n    queryKey: [\"comments\"],\n    queryFn: () => makeRequest.get(\"/comments?postId=\" + postId['postId']).then((res) => {\n      console.log(\"my data:\", res.data)\n      return res.data;\n    })\n  }\n  );\n\n  const mutation = useMutation({\n    mutationFn: (newComment) => {\n      console.log(\"new Comment:\")\n      return makeRequest.post('/comments', newComment)\n    },\n    onSuccess: () => {\n      // Invalidate and refetch(refresh)\n      queryClient.invalidateQueries({ queryKey: ['comments'] })\n    },\n  })\n\n  const handleClick = async (e, res) => {\n    e.preventDefault()\n\n    try {\n      mutation.mutate({ desc, postId })\n      setDesc(\"\")\n\n    } catch (error) {\n      res.status(500).json(\"Error in Fetching the comments : \" + error)\n    }\n  }\n\n  return (\n    <div className=\"comments\">\n      <div className=\"write\">\n        <img src={currentUser.profilePic} alt=\"\" />\n        <input type=\"text\" placeholder=\"write a comment\" value={desc} onChange={e => { setDesc(e.target.value) }}\n        />\n        <button onClick={handleClick}>Send</button>\n      </div>\n      {error ? \"Something went wrong in loading comments!\"\n        : (isLoading ? \"Loading comments...\" : data.map((comment) => (\n          <div className=\"comment\" key={comment.id}>\n            <img src={comment.profilePic} alt=\"\" />\n            <div className=\"info\">\n              <span>{comment.name}</span>\n              <p>{comment.desc}</p>\n            </div>\n            <span className=\"date\">{moment(comment.createdAt).fromNow()}</span>\n          </div>\n        )))}\n    </div>\n  );\n};\n\nexport default Comments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}